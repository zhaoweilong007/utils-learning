// Gradle 构建本身需要的配置（例如插件仓库）

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.3.12.RELEASE'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}


repositories {
    mavenLocal()
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web:2.4.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis:2.4.0'
    implementation 'org.apache.rocketmq:rocketmq-spring-boot-starter:2.2.0'
    implementation 'com.baomidou:mybatis-plus-boot-starter:3.4.2'
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation 'org.apache.httpcomponents:fluent-hc:4.5.13'
    implementation 'com.squareup.okhttp3:okhttp:4.9.1'
    implementation 'cn.hutool:hutool-all:5.6.4'
    implementation 'com.google.guava:guava:30.1.1-jre'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.alibaba:fastjson:1.2.76'
    implementation 'com.alibaba:easyexcel:2.2.8'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'junit:junit:4.13.2'
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'io.netty:netty-all:4.1.65.Final'
    implementation 'org.jsoup:jsoup:1.13.1'
    implementation 'org.redisson:redisson:3.11.3'
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    implementation group: 'com.lmax', name: 'disruptor', version: '3.4.4'
    implementation group: 'org.springframework.boot', name: 'spring-boot-gradle-plugin', version: '2.3.12.RELEASE'
    runtimeOnly 'mysql:mysql-connector-java:8.0.22'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.4.0'
    compileOnly 'org.projectlombok:lombok:1.18.20'
}

group = 'com.zwl'
version = '1.0'
description = 'utils-leaning'
java.sourceCompatibility = JavaVersion.VERSION_11
java.targetCompatibility = JavaVersion.VERSION_11


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}